# Obfuscated with PyObfuscate
# https://www.github.com/htr-tech
# Time : Sun Oct 13 16:06:30 2024
# -------------------------------
_ = lambda __ : __import__('base64').b64decode(__[::-1]);exec((_)(b'=='))